<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Examenes Tipo Test</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #6a11cb, #2575fc);
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            overflow: hidden;
        }
        .container {
            max-width: 600px;
            width: 90%;
            padding: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
            text-align: center;
            margin: 20px 0;
            transition: all 0.5s ease;
            animation: fadeIn 1s ease;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes welcomeAnimation {
            0% { opacity: 0; transform: scale(0.8); }
            100% { opacity: 1; transform: scale(1); }
        }
        @keyframes expandAnimation {
            0% { transform: scale(0.9); opacity: 0; }
            100% { transform: scale(1); opacity: 1; }
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .exam-button, #startScreen button {
            margin: 10px;
            padding: 15px 30px;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 10px;
            color: #fff;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .exam-button:hover, #startScreen button:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        #startScreen, #quizContainer, #result, #loadingScreen {
            display: none;
        }
        .question-container {
            margin-bottom: 20px;
        }
        .question-container label {
            display: block;
            margin: 10px 0;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .question-container label:hover {
            background: rgba(255, 255, 255, 0.2);
        }
        .question-container input[type="radio"]:checked + label {
            background: rgba(255, 255, 255, 0.3);
        }
        .buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        .buttons button {
            padding: 10px 20px;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 10px;
            color: #fff;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .buttons button:disabled {
            background: rgba(255, 255, 255, 0.1);
            cursor: not-allowed;
        }
        .buttons button:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        #progressBar {
            width: 100%;
            height: 10px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            margin-bottom: 20px;
        }
        #progress {
            height: 100%;
            background: #fff;
            border-radius: 5px;
            width: 0;
            transition: width 0.3s ease;
        }
        .floating-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            color: #fff;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.3s ease;
        }
        .floating-button:disabled {
            background: rgba(255, 255, 255, 0.1);
            cursor: not-allowed;
        }
        .floating-button:hover:not(:disabled) {
            background: rgba(255, 255, 255, 0.3);
        }
        .floating-button.left {
            right: auto;
            left: 20px;
        }
        #result {
            text-align: left;
            max-height: 400px;
            overflow-y: auto;
            padding: 10px;
        }
        #result ul {
            list-style: none;
            padding: 0;
        }
        #result li {
            margin: 10px 0;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
        }
        .welcome-message {
            font-size: 24px;
            font-weight: bold;
            animation: welcomeAnimation 1s ease;
        }
        #loadingScreen {
            text-align: center;
        }
        #loadingScreen .spinner {
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid #fff;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        #loadingScreen .progress-bar {
            width: 100%;
            height: 10px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            margin: 20px 0;
            overflow: hidden;
        }
        #loadingScreen .progress-bar .progress {
            height: 100%;
            background: #fff;
            border-radius: 5px;
            width: 0;
            transition: width 0.5s ease;
        }
        #loadingScreen .messages {
            margin-top: 20px;
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
        }
        .top-buttons {
            position: fixed;
            top: 20px;
            left: 20px;
            right: 20px;
            display: flex;
            justify-content: space-between;
        }
        .top-buttons a {
            padding: 10px 20px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            color: #fff;
            text-decoration: none;
            transition: background 0.3s ease;
        }
        .top-buttons a:hover {
            background: rgba(255, 255, 255, 0.3);
        }
    </style>
</head>
<body>
    <div class="top-buttons">
        <a href="https://moodle.educarex.es/evex/course/view.php?id=4374" target="_blank">Redes Locales - 1º SMR</a>
        <a href="https://www.youtube.com/@tecno-experimentosyretro8212" target="_blank">Mi canal de YouTube</a>
    </div>
    <div class="container">
        <div id="examMenu">
            <h2>Selecciona un Examen</h2>
            <button class="exam-button" onclick="loadExam('demostracion')">Examen Demostración</button>
            <button class="exam-button" onclick="loadExam('redesFacil')">Examen de Redes (Fácil)</button>
            <button class="exam-button" onclick="loadExam('redesIntermedio')">Examen de Redes (Intermedio)</button>
            <button class="exam-button" onclick="loadExam('redesDificil')">Examen de Redes (Difícil)</button>
        </div>

        <div id="startScreen">
            <h2>Bienvenido al Examen Tipo Test</h2>
            <p id="examDescription"></p>
            <p>Este examen consta de <strong><span id="totalQuestions"></span> preguntas</strong>. Cada pregunta correcta suma <strong><span id="pointsPerCorrect"></span></strong> puntos y cada incorrecta resta <strong><span id="pointsPerIncorrect"></span></strong> puntos.</p>
            <button onclick="startExam()">Comenzar Examen</button>
        </div>
        
        <div id="quizContainer">
            <div id="progressBar">
                <div id="progress"></div>
            </div>
            <div id="questions"></div>
            <div class="buttons">
                <button id="prevButton" onclick="prevQuestion()" disabled>Anterior</button>
                <button id="nextButton" onclick="nextQuestion()">Siguiente</button>
            </div>
        </div>
        
        <div id="loadingScreen">
            <div class="spinner"></div>
            <div class="progress-bar">
                <div class="progress"></div>
            </div>
            <div class="messages">Cargando resultados, por favor espere...</div>
        </div>
        
        <div id="result">
            <h3>Resultados</h3>
            <p id="score"></p>
            <ul id="summary"></ul>
        </div>
    </div>

    <!-- Botones flotantes -->
    <button class="floating-button" onclick="location.reload()"><i class="fas fa-home"></i></button>
    <button class="floating-button left" id="restartButton" onclick="restartExam()" disabled><i class="fas fa-redo"></i></button>

    <script>
        const exams = {
            demostracion: {
                description: "Examen de demostración para probar el sistema.",
                questions: [
                    { 
                        text: "¿Cuál es la capital de Francia?", 
                        options: ["Madrid", "París", "Berlín", "Lisboa"], 
                        correct: 1
                    },
                    { 
                        text: "¿Cuánto es 5 + 3?", 
                        options: ["5", "8", "10", "15"], 
                        correct: 1
                    },
                    { 
                        text: "¿Quién escribió 'Don Quijote de la Mancha'?", 
                        options: ["Miguel de Cervantes", "Gabriel García Márquez", "Pablo Neruda", "Federico García Lorca"], 
                        correct: 0
                    }
                ]
            },
            redesFacil: {
                description: "Versión fácil de lo que podría ser el examen del tema 5 (capa de red) de Juan.",
                questions: [
                    { 
                        text: "¿Cuántos bits tiene una dirección IPv4?", 
                        options: ["32", "64", "128", "256"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué clase de dirección IP tiene el rango 192.0.0.0 a 223.255.255.255?", 
                        options: ["Clase A", "Clase B", "Clase C", "Clase D"], 
                        correct: 2
                    },
                    { 
                        text: "¿Qué máscara de red se usa comúnmente en redes de clase C?", 
                        options: ["255.0.0.0", "255.255.0.0", "255.255.255.0", "255.255.255.255"], 
                        correct: 2
                    },
                    { 
                        text: "¿Qué protocolo se utiliza para transferir información entre dispositivos en la red?", 
                        options: ["HTTP", "FTP", "IP", "DNS"], 
                        correct: 2
                    },
                    { 
                        text: "¿Qué dirección IP pertenece a la clase A?", 
                        options: ["10.0.0.1", "172.16.0.1", "192.168.1.1", "224.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es privada?", 
                        options: ["192.168.1.1", "8.8.8.8", "172.32.0.1", "169.254.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para ver la configuración actual de un router?", 
                        options: ["show running-config", "show startup-config", "show version", "show interfaces"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué protocolo se utiliza para el enrutamiento en la capa de red?", 
                        options: ["IP", "TCP", "UDP", "OSPF"], 
                        correct: 3
                    },
                    { 
                        text: "¿Qué máscara de red se usa en una red con 254 hosts?", 
                        options: ["255.255.255.0", "255.255.0.0", "255.0.0.0", "255.255.255.255"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es de clase B?", 
                        options: ["172.16.0.1", "10.0.0.1", "192.168.1.1", "224.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es de loopback?", 
                        options: ["127.0.0.1", "192.168.1.1", "169.254.0.1", "10.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para acceder al modo privilegiado en un router?", 
                        options: ["enable", "configure terminal", "hostname", "show running-config"], 
                        correct: 0
                    }
                ]
            },
            redesIntermedio: {
                description: "Versión intermedia de lo que podría ser el examen del tema 5 (capa de red) de Juan.",
                questions: [
                    { 
                        text: "¿Qué parte de la dirección IP 192.168.1.10/24 corresponde a la red?", 
                        options: ["192.168.1.0", "192.168.1.10", "192.168.0.0", "192.168.1.255"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección de broadcast tiene la red 192.168.1.0/24?", 
                        options: ["192.168.1.0", "192.168.1.255", "192.168.0.255", "192.168.1.10"], 
                        correct: 1
                    },
                    { 
                        text: "¿Qué rango de direcciones IP pertenece a la clase B?", 
                        options: ["10.0.0.0 - 10.255.255.255", "172.16.0.0 - 172.31.255.255", "192.168.0.0 - 192.168.255.255", "224.0.0.0 - 239.255.255.255"], 
                        correct: 1
                    },
                    { 
                        text: "¿Qué protocolo se utiliza para el enrutamiento en la capa de red?", 
                        options: ["IP", "TCP", "UDP", "OSPF"], 
                        correct: 3
                    },
                    { 
                        text: "¿Qué dirección IP es válida para un host en la red 192.168.1.0/27?", 
                        options: ["192.168.1.0", "192.168.1.32", "192.168.1.31", "192.168.1.33"], 
                        correct: 3
                    },
                    { 
                        text: "¿Qué comando se utiliza para configurar una contraseña encriptada en un router?", 
                        options: ["password", "enable secret", "login", "service password-encryption"], 
                        correct: 1
                    },
                    { 
                        text: "¿Qué dirección IP pertenece a la clase D?", 
                        options: ["224.0.0.1", "192.168.1.1", "10.0.0.1", "172.16.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para guardar la configuración actual en un router?", 
                        options: ["copy running-config startup-config", "save config", "write memory", "backup config"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué máscara de red se usa en una red con 254 hosts?", 
                        options: ["255.255.255.0", "255.255.0.0", "255.0.0.0", "255.255.255.255"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es de clase B?", 
                        options: ["172.16.0.1", "10.0.0.1", "192.168.1.1", "224.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para ver la configuración actual de un router?", 
                        options: ["show running-config", "show startup-config", "show version", "show interfaces"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es privada?", 
                        options: ["192.168.1.1", "8.8.8.8", "172.32.0.1", "169.254.0.1"], 
                        correct: 0
                    }
                ]
            },
            redesDificil: {
                description: "Versión difícil de lo que podría ser el examen del tema 5 (capa de red) de Juan.",
                questions: [
                    { 
                        text: "¿Cuántos hosts pueden direccionarse en una red con máscara /28?", 
                        options: ["14", "16", "30", "32"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es válida para un host en la red 192.168.1.0/27?", 
                        options: ["192.168.1.0", "192.168.1.32", "192.168.1.31", "192.168.1.33"], 
                        correct: 3
                    },
                    { 
                        text: "¿Qué comando se utiliza para configurar una contraseña encriptada en un router?", 
                        options: ["password", "enable secret", "login", "service password-encryption"], 
                        correct: 1
                    },
                    { 
                        text: "¿Qué dirección IP pertenece a la clase D?", 
                        options: ["224.0.0.1", "192.168.1.1", "10.0.0.1", "172.16.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para guardar la configuración actual en un router?", 
                        options: ["copy running-config startup-config", "save config", "write memory", "backup config"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué máscara de red se usa en una red con 254 hosts?", 
                        options: ["255.255.255.0", "255.255.0.0", "255.0.0.0", "255.255.255.255"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es de clase B?", 
                        options: ["172.16.0.1", "10.0.0.1", "192.168.1.1", "224.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué comando se utiliza para ver la configuración actual de un router?", 
                        options: ["show running-config", "show startup-config", "show version", "show interfaces"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué protocolo se utiliza para el enrutamiento en la capa de red?", 
                        options: ["IP", "TCP", "UDP", "OSPF"], 
                        correct: 3
                    },
                    { 
                        text: "¿Qué dirección IP es privada?", 
                        options: ["192.168.1.1", "8.8.8.8", "172.32.0.1", "169.254.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP pertenece a la clase A?", 
                        options: ["10.0.0.1", "172.16.0.1", "192.168.1.1", "224.0.0.1"], 
                        correct: 0
                    },
                    { 
                        text: "¿Qué dirección IP es de loopback?", 
                        options: ["127.0.0.1", "192.168.1.1", "169.254.0.1", "10.0.0.1"], 
                        correct: 0
                    }
                ]
            }
        };

        let currentExam = [];
        let currentQuestionIndex = 0;
        let userAnswers = [];
        let pointsPerCorrect = 0;
        let pointsPerIncorrect = 0;

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }

        function shuffleQuestionsAndAnswers(exam) {
            shuffleArray(exam); // Mezclar preguntas
            exam.forEach(q => {
                const correctAnswer = q.options[q.correct];
                shuffleArray(q.options); // Mezclar opciones
                q.correct = q.options.indexOf(correctAnswer); // Actualizar índice de la respuesta correcta
            });
        }

        function loadExam(examKey) {
            const examData = exams[examKey];
            currentExam = examData.questions;
            shuffleQuestionsAndAnswers(currentExam); // Mezclar preguntas y respuestas
            userAnswers = new Array(currentExam.length).fill(null);
            pointsPerCorrect = (10 / currentExam.length).toFixed(2);
            pointsPerIncorrect = (5 / currentExam.length).toFixed(2);

            document.getElementById("totalQuestions").innerText = currentExam.length;
            document.getElementById("pointsPerCorrect").innerText = pointsPerCorrect;
            document.getElementById("pointsPerIncorrect").innerText = pointsPerIncorrect;
            document.getElementById("examDescription").innerText = examData.description;

            document.getElementById("examMenu").style.display = "none";
            document.getElementById("startScreen").style.display = "block";
            document.getElementById("restartButton").disabled = true;
        }

        function startExam() {
            document.getElementById("startScreen").style.display = "none";
            document.getElementById("quizContainer").style.display = "block";
            document.getElementById("restartButton").disabled = false;
            updateProgressBar();
            loadQuestion(currentQuestionIndex);
            document.querySelector('.container').style.animation = 'expandAnimation 0.5s ease';
        }

        function loadQuestion(index) {
            const questionContainer = document.getElementById("questions");
            questionContainer.innerHTML = "";
            
            if (index < currentExam.length) {
                const q = currentExam[index];
                const div = document.createElement("div");
                div.className = "question-container";
                div.innerHTML = `<p><strong>${index + 1}. ${q.text}</strong></p>` +
                    q.options.map((option, i) =>
                        `<label><input type="radio" name="q${index}" value="${i}" ${userAnswers[index] === i ? "checked" : ""}> ${option}</label><br>`
                    ).join("");
                questionContainer.appendChild(div);
                div.style.display = "block";
            }
            
            document.getElementById("prevButton").disabled = index === 0;
            document.getElementById("nextButton").innerText = index === currentExam.length - 1 ? "Finalizar" : "Siguiente";
        }

        function saveAnswer(index) {
            const selected = document.querySelector(`input[name='q${index}']:checked`);
            if (selected) {
                userAnswers[index] = parseInt(selected.value);
            }
        }

        function nextQuestion() {
            saveAnswer(currentQuestionIndex);
            if (currentQuestionIndex < currentExam.length - 1) {
                currentQuestionIndex++;
                loadQuestion(currentQuestionIndex);
                updateProgressBar();
            } else {
                showLoadingScreen();
            }
        }

        function prevQuestion() {
            saveAnswer(currentQuestionIndex);
            if (currentQuestionIndex > 0) {
                currentQuestionIndex--;
                loadQuestion(currentQuestionIndex);
                updateProgressBar();
            }
        }

        function showLoadingScreen() {
            document.getElementById("quizContainer").style.display = "none";
            document.getElementById("loadingScreen").style.display = "block";

            const messages = [
                "Cargando resultados, por favor espere...",
                "Procesando respuestas...",
                "Generando estadísticas...",
                "Finalizando..."
            ];

            const progressBar = document.querySelector("#loadingScreen .progress-bar .progress");
            const messagesElement = document.querySelector("#loadingScreen .messages");

            let progress = 0;
            let messageIndex = 0;

            const interval = setInterval(() => {
                progress += Math.random() * 10; // Incremento aleatorio
                progressBar.style.width = `${Math.min(progress, 100)}%`;

                if (progress >= 100) {
                    clearInterval(interval);
                    setTimeout(() => {
                        showResults();
                    }, 2000); // Esperar 2 segundos adicionales
                } else if (progress % 25 === 0) {
                    messagesElement.textContent = messages[messageIndex];
                    messageIndex = (messageIndex + 1) % messages.length;
                }
            }, 800); // 8 segundos en total
        }

        function showResults() {
            document.getElementById("loadingScreen").style.display = "none";
            document.getElementById("result").style.display = "block";

            let correctAnswers = 0;
            let wrongAnswers = 0;
            let summaryHTML = "";
            
            currentExam.forEach((q, index) => {
                const answer = userAnswers[index];
                if (answer !== null) {
                    if (answer === q.correct) {
                        correctAnswers++;
                        summaryHTML += `<li>✔️ Pregunta ${index + 1}: ${q.text}</li>`;
                    } else {
                        wrongAnswers++;
                        summaryHTML += `<li>❌ Pregunta ${index + 1}: ${q.text}<br>
                        <strong>Tu respuesta:</strong> ${q.options[answer] || "No respondida"} <br>
                        <strong>Respuesta correcta:</strong> ${q.options[q.correct]}</li>`;
                    }
                }
            });
            
            let score = (10 / currentExam.length) * correctAnswers - (5 / currentExam.length) * wrongAnswers;
            score = score.toFixed(2);  // Permitimos notas negativas
            
            document.getElementById("score").innerText = `Tu nota es: ${score}/10. Respuestas correctas: ${correctAnswers}/${currentExam.length}`;
            document.getElementById("summary").innerHTML = summaryHTML;
            document.getElementById("restartButton").disabled = false;
        }

        function updateProgressBar() {
            const progress = ((currentQuestionIndex + 1) / currentExam.length) * 100;
            document.getElementById("progress").style.width = `${progress}%`;
        }

        function restartExam() {
            currentQuestionIndex = 0;
            userAnswers = new Array(currentExam.length).fill(null);
            document.getElementById("quizContainer").style.display = "block";
            document.getElementById("result").style.display = "none";
            updateProgressBar();
            loadQuestion(currentQuestionIndex);
        }
    </script>
</body>
</html>
